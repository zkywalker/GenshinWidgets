plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.squareup.sqldelight'

}

android {
    compileSdk 31

    defaultConfig {
        applicationId "org.zky.genshinwidgets"
        minSdk 24
        targetSdk 30
        versionCode 4
        versionName "0.1.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file("~/StudioProjects/genshin_widget.keystore")
            storePassword "genshinwidgets"
            keyAlias "android"
            keyPassword "genshinwidgets"
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release
            zipAlignEnabled true
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            zipAlignEnabled false
        }
    }

    flavorDimensions "version"

    productFlavors {
        create("store") {
            dimension = "version"
            versionNameSuffix = ".store"
            manifestPlaceholders = [ENVIRONMENT: "store",
                                    app_icon   : "@mipmap/ic_launcher_store",
                                    round_icon : "@mipmap/ic_launcher_store_round"]
        }
        create("github") {
            dimension = "version"
            versionNameSuffix = ".github"
            manifestPlaceholders = [ENVIRONMENT: "github",
                                    app_icon   : "@mipmap/ic_launcher",
                                    round_icon : "@mipmap/ic_launcher_round"]
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose = true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.1.1"
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            if (buildType == 'release') {
                updateVersionJson(defaultConfig.versionCode, defaultConfig.versionName)
            }
            outputFileName = "genshin_widgets_" + buildType.name + "_" + defaultConfig.versionCode + "_v" + defaultConfig.versionName + ".apk"
        }
    }

}

def updateVersionJson(versionCode, versionName) {
    File json = new File(rootDir.getAbsoluteFile(), "version.json")
    if (json.exists()) {
        json.delete()
    }
    json.createNewFile()
    json.write("{\"versionCode\":" + versionCode + ",\"versionName\":\"" + versionName + "\"}")
}

//sqldelight {
//    database("genshin_widget.db") {
//        packageName = "org.zky.genshinwidgets"
//    }
//}


dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation "androidx.activity:activity:1.4.0"
    implementation "androidx.activity:activity-ktx:1.4.0"

    implementation("androidx.navigation:navigation-compose:2.4.2")
    // Integration with activities
    implementation 'androidx.activity:activity-compose:1.4.0'
    // Compose Material Design
    implementation 'androidx.compose.material:material:1.1.1'
    // Animations
    implementation 'androidx.compose.animation:animation:1.1.1'
    // Tooling support (Previews, etc.)
    implementation 'androidx.compose.ui:ui-tooling:1.1.1'
    // Integration with ViewModels
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.5.0-alpha05'
    implementation "androidx.compose.runtime:runtime-livedata:1.1.0"
    implementation("io.coil-kt:coil:1.4.0")
    implementation("io.coil-kt:coil-compose:1.4.0")
    implementation "com.google.accompanist:accompanist-flowlayout:0.24.9-beta"

    // UI Tests
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4:1.0.1'
    debugImplementation "androidx.compose.ui:ui-tooling:1.1.1"
    implementation "androidx.compose.ui:ui-tooling-preview:1.1.1"
    implementation("androidx.glance:glance:1.0.0-alpha03")
    implementation 'androidx.glance:glance-appwidget:1.0.0-alpha03'

    //gson
    implementation 'com.google.code.gson:gson:2.8.9'
    //okhttp
    implementation("com.squareup.okhttp3:okhttp:4.9.0")
    //retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    // coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.1'

    // firebase
    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:30.0.1')
    // Declare the dependencies for the Crashlytics and Analytics libraries
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    // sqldelight
    implementation("com.squareup.sqldelight:android-driver:1.5.0")

//    implementation 'com.github.lzyzsd:jsbridge:1.0.4'

}